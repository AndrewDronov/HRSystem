// <auto-generated />
using System;
using HRSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HRSystem.Migrations
{
    [DbContext(typeof(HrSystem))]
    [Migration("20221127223111_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HRSystem.Models.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("division_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CONVERT(Char(16), getdate() ,20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.HasKey("DivisionId");

                    b.HasIndex("ParentId");

                    b.ToTable("division");
                });

            modelBuilder.Entity("HRSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("division_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("middle_name");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DivisionId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("HRSystem.Models.TransferHistory", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transfer_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateFrom")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2")
                        .HasColumnName("date_from");

                    b.Property<DateTime?>("DateTo")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2")
                        .HasColumnName("date_to");

                    b.Property<int>("DivisionId")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("division_id");

                    b.Property<int>("EmployeeId")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.HasKey("TransferId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("transfer_history");
                });

            modelBuilder.Entity("HRSystem.Models.Division", b =>
                {
                    b.HasOne("HRSystem.Models.Division", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("HRSystem.Models.Employee", b =>
                {
                    b.HasOne("HRSystem.Models.Division", "Division")
                        .WithMany("Employees")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("employee_FK")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Division");
                });

            modelBuilder.Entity("HRSystem.Models.TransferHistory", b =>
                {
                    b.HasOne("HRSystem.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("transfer_history_FK")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("HRSystem.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("transfer_history_FK_1")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRSystem.Models.Division", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
